
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#include <folly/python/import.h>
#include <thrift/lib/python/capi/iobuf.h>
#include <thrift/lib/python/types.h>

#include <thrift/compiler/test/fixtures/complex-union/src/gen-python-capi/module/thrift_types_api.h>
#include <thrift/compiler/test/fixtures/complex-union/src/gen-python-capi/module/thrift_types_capi.h>


namespace apache {
namespace thrift {
namespace python {
namespace capi {
namespace {
bool ensure_module_imported() {
  static ::folly::python::import_cache_nocapture import((
      ::import_module__thrift_types_capi));
  return import();
}
} // namespace

ExtractorResult<::cpp2::ComplexUnion>
Extractor<::cpp2::ComplexUnion>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ComplexUnion>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__ComplexUnion(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::ComplexUnion>(
        "Thrift serialize error: ComplexUnion");
  }
  return detail::deserialize_iobuf<::cpp2::ComplexUnion>(std::move(val));
}


ExtractorResult<::cpp2::ComplexUnion>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::ComplexUnion>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ComplexUnion>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__ComplexUnion(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::ComplexUnion>(
          "Init from fbthrift error: ComplexUnion");
  }
  return Extractor<::cpp2::ComplexUnion>{}(*obj);
}

int Extractor<::cpp2::ComplexUnion>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__ComplexUnion(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: ComplexUnion");
  }
  return result;
}


PyObject* Constructor<::cpp2::ComplexUnion>::operator()(
    const ::cpp2::ComplexUnion& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__ComplexUnion(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::ComplexUnion>>::operator()(
    const ::cpp2::ComplexUnion& val) {
  auto obj = StrongRef(Constructor<::cpp2::ComplexUnion>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::ListUnion>
Extractor<::cpp2::ListUnion>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ListUnion>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__ListUnion(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::ListUnion>(
        "Thrift serialize error: ListUnion");
  }
  return detail::deserialize_iobuf<::cpp2::ListUnion>(std::move(val));
}


ExtractorResult<::cpp2::ListUnion>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::ListUnion>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ListUnion>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__ListUnion(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::ListUnion>(
          "Init from fbthrift error: ListUnion");
  }
  return Extractor<::cpp2::ListUnion>{}(*obj);
}

int Extractor<::cpp2::ListUnion>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__ListUnion(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: ListUnion");
  }
  return result;
}


PyObject* Constructor<::cpp2::ListUnion>::operator()(
    const ::cpp2::ListUnion& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__ListUnion(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::ListUnion>>::operator()(
    const ::cpp2::ListUnion& val) {
  auto obj = StrongRef(Constructor<::cpp2::ListUnion>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::DataUnion>
Extractor<::cpp2::DataUnion>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::DataUnion>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__DataUnion(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::DataUnion>(
        "Thrift serialize error: DataUnion");
  }
  return detail::deserialize_iobuf<::cpp2::DataUnion>(std::move(val));
}


ExtractorResult<::cpp2::DataUnion>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::DataUnion>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::DataUnion>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__DataUnion(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::DataUnion>(
          "Init from fbthrift error: DataUnion");
  }
  return Extractor<::cpp2::DataUnion>{}(*obj);
}

int Extractor<::cpp2::DataUnion>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__DataUnion(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: DataUnion");
  }
  return result;
}


PyObject* Constructor<::cpp2::DataUnion>::operator()(
    const ::cpp2::DataUnion& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__DataUnion(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::DataUnion>>::operator()(
    const ::cpp2::DataUnion& val) {
  auto obj = StrongRef(Constructor<::cpp2::DataUnion>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::Val>
Extractor<::cpp2::Val>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Val>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__Val(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::Val>(
        "Thrift serialize error: Val");
  }
  return detail::deserialize_iobuf<::cpp2::Val>(std::move(val));
}


ExtractorResult<::cpp2::Val>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::Val>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Val>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__Val(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::Val>(
          "Init from fbthrift error: Val");
  }
  return Extractor<::cpp2::Val>{}(*obj);
}

int Extractor<::cpp2::Val>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__Val(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Val");
  }
  return result;
}


PyObject* Constructor<::cpp2::Val>::operator()(
    const ::cpp2::Val& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__Val(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Val>>::operator()(
    const ::cpp2::Val& val) {
  auto obj = StrongRef(Constructor<::cpp2::Val>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::ValUnion>
Extractor<::cpp2::ValUnion>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ValUnion>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__ValUnion(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::ValUnion>(
        "Thrift serialize error: ValUnion");
  }
  return detail::deserialize_iobuf<::cpp2::ValUnion>(std::move(val));
}


ExtractorResult<::cpp2::ValUnion>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::ValUnion>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ValUnion>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__ValUnion(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::ValUnion>(
          "Init from fbthrift error: ValUnion");
  }
  return Extractor<::cpp2::ValUnion>{}(*obj);
}

int Extractor<::cpp2::ValUnion>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__ValUnion(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: ValUnion");
  }
  return result;
}


PyObject* Constructor<::cpp2::ValUnion>::operator()(
    const ::cpp2::ValUnion& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__ValUnion(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::ValUnion>>::operator()(
    const ::cpp2::ValUnion& val) {
  auto obj = StrongRef(Constructor<::cpp2::ValUnion>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::VirtualComplexUnion>
Extractor<::cpp2::VirtualComplexUnion>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::VirtualComplexUnion>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__VirtualComplexUnion(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::VirtualComplexUnion>(
        "Thrift serialize error: VirtualComplexUnion");
  }
  return detail::deserialize_iobuf<::cpp2::VirtualComplexUnion>(std::move(val));
}


ExtractorResult<::cpp2::VirtualComplexUnion>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::VirtualComplexUnion>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::VirtualComplexUnion>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__VirtualComplexUnion(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::VirtualComplexUnion>(
          "Init from fbthrift error: VirtualComplexUnion");
  }
  return Extractor<::cpp2::VirtualComplexUnion>{}(*obj);
}

int Extractor<::cpp2::VirtualComplexUnion>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__VirtualComplexUnion(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: VirtualComplexUnion");
  }
  return result;
}


PyObject* Constructor<::cpp2::VirtualComplexUnion>::operator()(
    const ::cpp2::VirtualComplexUnion& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__VirtualComplexUnion(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::VirtualComplexUnion>>::operator()(
    const ::cpp2::VirtualComplexUnion& val) {
  auto obj = StrongRef(Constructor<::cpp2::VirtualComplexUnion>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::NonCopyableStruct>
Extractor<::cpp2::NonCopyableStruct>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::NonCopyableStruct>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__NonCopyableStruct(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::NonCopyableStruct>(
        "Thrift serialize error: NonCopyableStruct");
  }
  return detail::deserialize_iobuf<::cpp2::NonCopyableStruct>(std::move(val));
}


ExtractorResult<::cpp2::NonCopyableStruct>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::NonCopyableStruct>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::NonCopyableStruct>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__NonCopyableStruct(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::NonCopyableStruct>(
          "Init from fbthrift error: NonCopyableStruct");
  }
  return Extractor<::cpp2::NonCopyableStruct>{}(*obj);
}

int Extractor<::cpp2::NonCopyableStruct>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__NonCopyableStruct(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: NonCopyableStruct");
  }
  return result;
}


PyObject* Constructor<::cpp2::NonCopyableStruct>::operator()(
    const ::cpp2::NonCopyableStruct& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__NonCopyableStruct(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::NonCopyableStruct>>::operator()(
    const ::cpp2::NonCopyableStruct& val) {
  auto obj = StrongRef(Constructor<::cpp2::NonCopyableStruct>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

ExtractorResult<::cpp2::NonCopyableUnion>
Extractor<::cpp2::NonCopyableUnion>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::NonCopyableUnion>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__NonCopyableUnion(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::NonCopyableUnion>(
        "Thrift serialize error: NonCopyableUnion");
  }
  return detail::deserialize_iobuf<::cpp2::NonCopyableUnion>(std::move(val));
}


ExtractorResult<::cpp2::NonCopyableUnion>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::NonCopyableUnion>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::NonCopyableUnion>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__NonCopyableUnion(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::NonCopyableUnion>(
          "Init from fbthrift error: NonCopyableUnion");
  }
  return Extractor<::cpp2::NonCopyableUnion>{}(*obj);
}

int Extractor<::cpp2::NonCopyableUnion>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__NonCopyableUnion(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: NonCopyableUnion");
  }
  return result;
}


PyObject* Constructor<::cpp2::NonCopyableUnion>::operator()(
    const ::cpp2::NonCopyableUnion& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__NonCopyableUnion(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::NonCopyableUnion>>::operator()(
    const ::cpp2::NonCopyableUnion& val) {
  auto obj = StrongRef(Constructor<::cpp2::NonCopyableUnion>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

} // namespace capi
} // namespace python
} // namespace thrift
} // namespace apache
