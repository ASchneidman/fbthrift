/**
 * Autogenerated by Thrift for src/module.thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated @nocommit
 */
#pragma once

#include <vector>

#include <thrift/lib/cpp2/gen/module_metadata_h.h>
#include "thrift/compiler/test/fixtures/inheritance/gen-cpp2/module_types.h"

namespace cpp2 {
class MyRoot;
class MyRootSvIf;
} // namespace cpp2
namespace cpp2 {
class MyNode;
class MyNodeSvIf;
} // namespace cpp2
namespace cpp2 {
class MyLeaf;
class MyLeafSvIf;
} // namespace cpp2

namespace apache {
namespace thrift {
namespace detail {
namespace md {

template <>
class ServiceMetadata<::apache::thrift::ServiceHandler<::cpp2::MyRoot>> {
 public:
  static void gen(ThriftServiceMetadataResponse& response);
 private:
  static const ThriftServiceContextRef* genRecurse(ThriftMetadata& metadata, std::vector<ThriftServiceContextRef>& services);

  template <typename T>
  friend class ServiceMetadata;

  static void gen_do_root(ThriftMetadata& metadata, ThriftService& context);
};
template <>
class ServiceMetadata<::cpp2::MyRootSvIf> final
    : public ServiceMetadata<::apache::thrift::ServiceHandler<::cpp2::MyRoot>> {};
template <>
class ServiceMetadata<::apache::thrift::ServiceHandler<::cpp2::MyNode>> {
 public:
  static void gen(ThriftServiceMetadataResponse& response);
 private:
  static const ThriftServiceContextRef* genRecurse(ThriftMetadata& metadata, std::vector<ThriftServiceContextRef>& services);

  template <typename T>
  friend class ServiceMetadata;

  static void gen_do_mid(ThriftMetadata& metadata, ThriftService& context);
};
template <>
class ServiceMetadata<::cpp2::MyNodeSvIf> final
    : public ServiceMetadata<::apache::thrift::ServiceHandler<::cpp2::MyNode>> {};
template <>
class ServiceMetadata<::apache::thrift::ServiceHandler<::cpp2::MyLeaf>> {
 public:
  static void gen(ThriftServiceMetadataResponse& response);
 private:
  static const ThriftServiceContextRef* genRecurse(ThriftMetadata& metadata, std::vector<ThriftServiceContextRef>& services);

  template <typename T>
  friend class ServiceMetadata;

  static void gen_do_leaf(ThriftMetadata& metadata, ThriftService& context);
};
template <>
class ServiceMetadata<::cpp2::MyLeafSvIf> final
    : public ServiceMetadata<::apache::thrift::ServiceHandler<::cpp2::MyLeaf>> {};
} // namespace md
} // namespace detail
} // namespace thrift
} // namespace apache
