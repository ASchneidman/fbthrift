
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#include <folly/python/import.h>
#include <thrift/lib/python/capi/iobuf.h>
#include <thrift/lib/python/types.h>

#include <thrift/compiler/test/fixtures/exceptions/src/gen-python-capi/module/thrift_types_api.h>
#include <thrift/compiler/test/fixtures/exceptions/src/gen-python-capi/module/thrift_types_capi.h>


namespace apache {
namespace thrift {
namespace python {
namespace capi {
namespace {
bool ensure_module_imported() {
  static ::folly::python::import_cache_nocapture import((
      ::import_module__thrift_types_capi));
  return import();
}
} // namespace

ExtractorResult<::cpp2::Fiery>
Extractor<::cpp2::Fiery>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Fiery>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__Fiery(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::Fiery>(
        "Thrift serialize error: Fiery");
  }
  return detail::deserialize_iobuf<::cpp2::Fiery>(std::move(val));
}


ExtractorResult<::cpp2::Fiery>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::Fiery>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Fiery>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__Fiery(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::Fiery>(
          "Init from fbthrift error: Fiery");
  }
  return Extractor<::cpp2::Fiery>{}(*obj);
}

int Extractor<::cpp2::Fiery>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__Fiery(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Fiery");
  }
  return result;
}


PyObject* Constructor<::cpp2::Fiery>::operator()(
    const ::cpp2::Fiery& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__Fiery(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Fiery>>::operator()(
    const ::cpp2::Fiery& val) {
  auto obj = StrongRef(Constructor<::cpp2::Fiery>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getExceptionThriftData(*obj);
}

ExtractorResult<::cpp2::Serious>
Extractor<::cpp2::Serious>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Serious>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__Serious(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::Serious>(
        "Thrift serialize error: Serious");
  }
  return detail::deserialize_iobuf<::cpp2::Serious>(std::move(val));
}


ExtractorResult<::cpp2::Serious>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::Serious>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Serious>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__Serious(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::Serious>(
          "Init from fbthrift error: Serious");
  }
  return Extractor<::cpp2::Serious>{}(*obj);
}

int Extractor<::cpp2::Serious>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__Serious(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Serious");
  }
  return result;
}


PyObject* Constructor<::cpp2::Serious>::operator()(
    const ::cpp2::Serious& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__Serious(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Serious>>::operator()(
    const ::cpp2::Serious& val) {
  auto obj = StrongRef(Constructor<::cpp2::Serious>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getExceptionThriftData(*obj);
}

ExtractorResult<::cpp2::ComplexFieldNames>
Extractor<::cpp2::ComplexFieldNames>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ComplexFieldNames>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__ComplexFieldNames(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::ComplexFieldNames>(
        "Thrift serialize error: ComplexFieldNames");
  }
  return detail::deserialize_iobuf<::cpp2::ComplexFieldNames>(std::move(val));
}


ExtractorResult<::cpp2::ComplexFieldNames>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::ComplexFieldNames>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ComplexFieldNames>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__ComplexFieldNames(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::ComplexFieldNames>(
          "Init from fbthrift error: ComplexFieldNames");
  }
  return Extractor<::cpp2::ComplexFieldNames>{}(*obj);
}

int Extractor<::cpp2::ComplexFieldNames>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__ComplexFieldNames(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: ComplexFieldNames");
  }
  return result;
}


PyObject* Constructor<::cpp2::ComplexFieldNames>::operator()(
    const ::cpp2::ComplexFieldNames& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__ComplexFieldNames(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::ComplexFieldNames>>::operator()(
    const ::cpp2::ComplexFieldNames& val) {
  auto obj = StrongRef(Constructor<::cpp2::ComplexFieldNames>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getExceptionThriftData(*obj);
}

ExtractorResult<::cpp2::CustomFieldNames>
Extractor<::cpp2::CustomFieldNames>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::CustomFieldNames>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__CustomFieldNames(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::CustomFieldNames>(
        "Thrift serialize error: CustomFieldNames");
  }
  return detail::deserialize_iobuf<::cpp2::CustomFieldNames>(std::move(val));
}


ExtractorResult<::cpp2::CustomFieldNames>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::CustomFieldNames>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::CustomFieldNames>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__CustomFieldNames(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::CustomFieldNames>(
          "Init from fbthrift error: CustomFieldNames");
  }
  return Extractor<::cpp2::CustomFieldNames>{}(*obj);
}

int Extractor<::cpp2::CustomFieldNames>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__CustomFieldNames(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: CustomFieldNames");
  }
  return result;
}


PyObject* Constructor<::cpp2::CustomFieldNames>::operator()(
    const ::cpp2::CustomFieldNames& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__CustomFieldNames(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::CustomFieldNames>>::operator()(
    const ::cpp2::CustomFieldNames& val) {
  auto obj = StrongRef(Constructor<::cpp2::CustomFieldNames>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getExceptionThriftData(*obj);
}

ExtractorResult<::cpp2::ExceptionWithPrimitiveField>
Extractor<::cpp2::ExceptionWithPrimitiveField>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ExceptionWithPrimitiveField>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__ExceptionWithPrimitiveField(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::ExceptionWithPrimitiveField>(
        "Thrift serialize error: ExceptionWithPrimitiveField");
  }
  return detail::deserialize_iobuf<::cpp2::ExceptionWithPrimitiveField>(std::move(val));
}


ExtractorResult<::cpp2::ExceptionWithPrimitiveField>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::ExceptionWithPrimitiveField>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ExceptionWithPrimitiveField>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__ExceptionWithPrimitiveField(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::ExceptionWithPrimitiveField>(
          "Init from fbthrift error: ExceptionWithPrimitiveField");
  }
  return Extractor<::cpp2::ExceptionWithPrimitiveField>{}(*obj);
}

int Extractor<::cpp2::ExceptionWithPrimitiveField>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__ExceptionWithPrimitiveField(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: ExceptionWithPrimitiveField");
  }
  return result;
}


PyObject* Constructor<::cpp2::ExceptionWithPrimitiveField>::operator()(
    const ::cpp2::ExceptionWithPrimitiveField& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__ExceptionWithPrimitiveField(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::ExceptionWithPrimitiveField>>::operator()(
    const ::cpp2::ExceptionWithPrimitiveField& val) {
  auto obj = StrongRef(Constructor<::cpp2::ExceptionWithPrimitiveField>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getExceptionThriftData(*obj);
}

ExtractorResult<::cpp2::ExceptionWithStructuredAnnotation>
Extractor<::cpp2::ExceptionWithStructuredAnnotation>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ExceptionWithStructuredAnnotation>(
      "Module module import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__module__ExceptionWithStructuredAnnotation(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::ExceptionWithStructuredAnnotation>(
        "Thrift serialize error: ExceptionWithStructuredAnnotation");
  }
  return detail::deserialize_iobuf<::cpp2::ExceptionWithStructuredAnnotation>(std::move(val));
}


ExtractorResult<::cpp2::ExceptionWithStructuredAnnotation>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::ExceptionWithStructuredAnnotation>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::ExceptionWithStructuredAnnotation>(
      "Module module import error");
  }
  auto obj = StrongRef(init__module__ExceptionWithStructuredAnnotation(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::ExceptionWithStructuredAnnotation>(
          "Init from fbthrift error: ExceptionWithStructuredAnnotation");
  }
  return Extractor<::cpp2::ExceptionWithStructuredAnnotation>{}(*obj);
}

int Extractor<::cpp2::ExceptionWithStructuredAnnotation>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__ExceptionWithStructuredAnnotation(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: ExceptionWithStructuredAnnotation");
  }
  return result;
}


PyObject* Constructor<::cpp2::ExceptionWithStructuredAnnotation>::operator()(
    const ::cpp2::ExceptionWithStructuredAnnotation& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__module__ExceptionWithStructuredAnnotation(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::ExceptionWithStructuredAnnotation>>::operator()(
    const ::cpp2::ExceptionWithStructuredAnnotation& val) {
  auto obj = StrongRef(Constructor<::cpp2::ExceptionWithStructuredAnnotation>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getExceptionThriftData(*obj);
}

ExtractorResult<::cpp2::Banal>
Extractor<::cpp2::Banal>::operator()(PyObject* obj) {
  int tCheckResult = typeCheck(obj);
  if (tCheckResult != 1) {
      if (tCheckResult == 0) {
        PyErr_SetString(PyExc_TypeError, "Not a Banal");
      }
      return extractorError<::cpp2::Banal>(
          "Marshal error: Banal");
  }
  return ::cpp2::Banal{};
}

ExtractorResult<::cpp2::Banal>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::Banal>>::operator()(PyObject* fbThriftData) {
  ::cpp2::Banal cpp;
  (void)fbThriftData;
  return cpp;
}


int Extractor<::cpp2::Banal>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module module import error");
  }
  int result =
      can_extract__module__Banal(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Banal");
  }
  return result;
}


PyObject* Constructor<::cpp2::Banal>::operator()(
    const ::cpp2::Banal& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Banal>> ctor;
  StrongRef fbthrift_data(ctor(val));
  if (!fbthrift_data) {
    return nullptr;
  }
  return init__module__Banal(*fbthrift_data);
}

PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Banal>>::operator()(
    FOLLY_MAYBE_UNUSED const ::cpp2::Banal& val) {
  StrongRef fbthrift_data(createStructTuple(0));
  return std::move(fbthrift_data).release();
}


} // namespace capi
} // namespace python
} // namespace thrift
} // namespace apache
