#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#
import folly.iobuf as _fbthrift_iobuf
import thrift.py3lite.types as _fbthrift_py3lite_types
import thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions


import facebook.thrift.annotation.thrift.thrift.lite_types


class BoolPatch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_bool,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "invert",  # name
            _fbthrift_py3lite_types.typeinfo_bool,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.BoolPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_BoolPatch()



class BytePatch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_byte,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "add",  # name
            _fbthrift_py3lite_types.typeinfo_byte,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.BytePatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_BytePatch()



class I16Patch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_i16,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "add",  # name
            _fbthrift_py3lite_types.typeinfo_i16,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.I16Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_I16Patch()



class I32Patch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_i32,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "add",  # name
            _fbthrift_py3lite_types.typeinfo_i32,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.I32Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_I32Patch()



class I64Patch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_i64,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "add",  # name
            _fbthrift_py3lite_types.typeinfo_i64,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.I64Patch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_I64Patch()



class FloatPatch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_float,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "add",  # name
            _fbthrift_py3lite_types.typeinfo_float,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.FloatPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_FloatPatch()



class DoublePatch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_double,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "add",  # name
            _fbthrift_py3lite_types.typeinfo_double,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.DoublePatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_DoublePatch()



class StringPatch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
        (
            2,  # id
            True,  # isUnqualified
            "append",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
        (
            3,  # id
            True,  # isUnqualified
            "prepend",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.StringPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_StringPatch()



class BinaryPatch(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            False,  # isUnqualified
            "assign",  # name
            _fbthrift_py3lite_types.typeinfo_binary,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "patch.BinaryPatch"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_BinaryPatch()


# This unfortunately has to be down here to prevent circular imports
import patch.lite_metadata


def _fbthrift_metadata__struct_BoolPatch():
    return patch.lite_metadata.gen_metadata_struct_BoolPatch()
def _fbthrift_metadata__struct_BytePatch():
    return patch.lite_metadata.gen_metadata_struct_BytePatch()
def _fbthrift_metadata__struct_I16Patch():
    return patch.lite_metadata.gen_metadata_struct_I16Patch()
def _fbthrift_metadata__struct_I32Patch():
    return patch.lite_metadata.gen_metadata_struct_I32Patch()
def _fbthrift_metadata__struct_I64Patch():
    return patch.lite_metadata.gen_metadata_struct_I64Patch()
def _fbthrift_metadata__struct_FloatPatch():
    return patch.lite_metadata.gen_metadata_struct_FloatPatch()
def _fbthrift_metadata__struct_DoublePatch():
    return patch.lite_metadata.gen_metadata_struct_DoublePatch()
def _fbthrift_metadata__struct_StringPatch():
    return patch.lite_metadata.gen_metadata_struct_StringPatch()
def _fbthrift_metadata__struct_BinaryPatch():
    return patch.lite_metadata.gen_metadata_struct_BinaryPatch()



_fbthrift_py3lite_types.fill_specs(
    BoolPatch,
    BytePatch,
    I16Patch,
    I32Patch,
    I64Patch,
    FloatPatch,
    DoublePatch,
    StringPatch,
    BinaryPatch,
)
