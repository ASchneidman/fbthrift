#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#
cimport cython as __cython
from cython.operator cimport dereference as deref
from libcpp.memory cimport make_unique, unique_ptr, shared_ptr
from thrift.py3.types cimport assign_unique_ptr, assign_shared_ptr, assign_shared_const_ptr

cimport thrift.py3.types
from thrift.py3.types cimport (
    reset_field as __reset_field,
    StructFieldsSetter as __StructFieldsSetter
)

from thrift.py3.types cimport const_pointer_cast


@__cython.auto_pickle(False)
cdef class __MyStruct_FieldsSetter(__StructFieldsSetter):

    @staticmethod
    cdef __MyStruct_FieldsSetter _fbthrift_create(_module_types.cMyStruct* struct_cpp_obj):
        cdef __MyStruct_FieldsSetter __fbthrift_inst = __MyStruct_FieldsSetter.__new__(__MyStruct_FieldsSetter)
        __fbthrift_inst._struct_cpp_obj = struct_cpp_obj
        __fbthrift_inst._setters[__cstring_view(<const char*>"boolVal")] = __MyStruct_FieldsSetter._set_field_0
        __fbthrift_inst._setters[__cstring_view(<const char*>"byteVal")] = __MyStruct_FieldsSetter._set_field_1
        __fbthrift_inst._setters[__cstring_view(<const char*>"i16Val")] = __MyStruct_FieldsSetter._set_field_2
        __fbthrift_inst._setters[__cstring_view(<const char*>"i32Val")] = __MyStruct_FieldsSetter._set_field_3
        __fbthrift_inst._setters[__cstring_view(<const char*>"i64Val")] = __MyStruct_FieldsSetter._set_field_4
        __fbthrift_inst._setters[__cstring_view(<const char*>"floatVal")] = __MyStruct_FieldsSetter._set_field_5
        __fbthrift_inst._setters[__cstring_view(<const char*>"doubleVal")] = __MyStruct_FieldsSetter._set_field_6
        __fbthrift_inst._setters[__cstring_view(<const char*>"stringVal")] = __MyStruct_FieldsSetter._set_field_7
        __fbthrift_inst._setters[__cstring_view(<const char*>"binaryVal")] = __MyStruct_FieldsSetter._set_field_8
        return __fbthrift_inst

    cdef void set_field(__MyStruct_FieldsSetter self, const char* name, object value) except *:
        cdef __cstring_view cname = __cstring_view(name)
        cdef cumap[__cstring_view, __MyStruct_FieldsSetterFunc].iterator found = self._setters.find(cname)
        if found == self._setters.end():
            raise TypeError(f"invalid field name {name.decode('utf-8')}")
        deref(found).second(self, value)

    cdef void _set_field_0(self, _fbthrift_value) except *:
        # for field boolVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 0)
            return
        if not isinstance(_fbthrift_value, bool):
            raise TypeError(f'boolVal is not a { bool !r}.')
        deref(self._struct_cpp_obj).boolVal_ref().assign(_fbthrift_value)

    cdef void _set_field_1(self, _fbthrift_value) except *:
        # for field byteVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 1)
            return
        if not isinstance(_fbthrift_value, int):
            raise TypeError(f'byteVal is not a { int !r}.')
        _fbthrift_value = <cint8_t> _fbthrift_value
        deref(self._struct_cpp_obj).byteVal_ref().assign(_fbthrift_value)

    cdef void _set_field_2(self, _fbthrift_value) except *:
        # for field i16Val
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 2)
            return
        if not isinstance(_fbthrift_value, int):
            raise TypeError(f'i16Val is not a { int !r}.')
        _fbthrift_value = <cint16_t> _fbthrift_value
        deref(self._struct_cpp_obj).i16Val_ref().assign(_fbthrift_value)

    cdef void _set_field_3(self, _fbthrift_value) except *:
        # for field i32Val
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 3)
            return
        if not isinstance(_fbthrift_value, int):
            raise TypeError(f'i32Val is not a { int !r}.')
        _fbthrift_value = <cint32_t> _fbthrift_value
        deref(self._struct_cpp_obj).i32Val_ref().assign(_fbthrift_value)

    cdef void _set_field_4(self, _fbthrift_value) except *:
        # for field i64Val
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 4)
            return
        if not isinstance(_fbthrift_value, int):
            raise TypeError(f'i64Val is not a { int !r}.')
        _fbthrift_value = <cint64_t> _fbthrift_value
        deref(self._struct_cpp_obj).i64Val_ref().assign(_fbthrift_value)

    cdef void _set_field_5(self, _fbthrift_value) except *:
        # for field floatVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 5)
            return
        if not isinstance(_fbthrift_value, (float, int)):
            raise TypeError(f'floatVal is not a { float !r}.')
        deref(self._struct_cpp_obj).floatVal_ref().assign(_fbthrift_value)

    cdef void _set_field_6(self, _fbthrift_value) except *:
        # for field doubleVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 6)
            return
        if not isinstance(_fbthrift_value, (float, int)):
            raise TypeError(f'doubleVal is not a { float !r}.')
        deref(self._struct_cpp_obj).doubleVal_ref().assign(_fbthrift_value)

    cdef void _set_field_7(self, _fbthrift_value) except *:
        # for field stringVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 7)
            return
        if not isinstance(_fbthrift_value, str):
            raise TypeError(f'stringVal is not a { str !r}.')
        deref(self._struct_cpp_obj).stringVal_ref().assign(cmove(bytes_to_string(_fbthrift_value.encode('utf-8'))))

    cdef void _set_field_8(self, _fbthrift_value) except *:
        # for field binaryVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStruct](deref(self._struct_cpp_obj), 8)
            return
        if not isinstance(_fbthrift_value, bytes):
            raise TypeError(f'binaryVal is not a { bytes !r}.')
        deref(self._struct_cpp_obj).binaryVal_ref().assign(_module_types._folly_IOBuf(cmove(<string>_fbthrift_value)))


@__cython.auto_pickle(False)
cdef class __MyStructPatch_FieldsSetter(__StructFieldsSetter):

    @staticmethod
    cdef __MyStructPatch_FieldsSetter _fbthrift_create(_module_types.cMyStructPatch* struct_cpp_obj):
        cdef __MyStructPatch_FieldsSetter __fbthrift_inst = __MyStructPatch_FieldsSetter.__new__(__MyStructPatch_FieldsSetter)
        __fbthrift_inst._struct_cpp_obj = struct_cpp_obj
        __fbthrift_inst._setters[__cstring_view(<const char*>"boolVal")] = __MyStructPatch_FieldsSetter._set_field_0
        __fbthrift_inst._setters[__cstring_view(<const char*>"byteVal")] = __MyStructPatch_FieldsSetter._set_field_1
        __fbthrift_inst._setters[__cstring_view(<const char*>"i16Val")] = __MyStructPatch_FieldsSetter._set_field_2
        __fbthrift_inst._setters[__cstring_view(<const char*>"i32Val")] = __MyStructPatch_FieldsSetter._set_field_3
        __fbthrift_inst._setters[__cstring_view(<const char*>"i64Val")] = __MyStructPatch_FieldsSetter._set_field_4
        __fbthrift_inst._setters[__cstring_view(<const char*>"floatVal")] = __MyStructPatch_FieldsSetter._set_field_5
        __fbthrift_inst._setters[__cstring_view(<const char*>"doubleVal")] = __MyStructPatch_FieldsSetter._set_field_6
        __fbthrift_inst._setters[__cstring_view(<const char*>"stringVal")] = __MyStructPatch_FieldsSetter._set_field_7
        __fbthrift_inst._setters[__cstring_view(<const char*>"binaryVal")] = __MyStructPatch_FieldsSetter._set_field_8
        return __fbthrift_inst

    cdef void set_field(__MyStructPatch_FieldsSetter self, const char* name, object value) except *:
        cdef __cstring_view cname = __cstring_view(name)
        cdef cumap[__cstring_view, __MyStructPatch_FieldsSetterFunc].iterator found = self._setters.find(cname)
        if found == self._setters.end():
            raise TypeError(f"invalid field name {name.decode('utf-8')}")
        deref(found).second(self, value)

    cdef void _set_field_0(self, _fbthrift_value) except *:
        # for field boolVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 0)
            return
        if not isinstance(_fbthrift_value, _patch_types.BoolPatch):
            raise TypeError(f'boolVal is not a { _patch_types.BoolPatch !r}.')
        deref(self._struct_cpp_obj).boolVal_ref().assign(deref((<_patch_types.BoolPatch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_1(self, _fbthrift_value) except *:
        # for field byteVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 1)
            return
        if not isinstance(_fbthrift_value, _patch_types.BytePatch):
            raise TypeError(f'byteVal is not a { _patch_types.BytePatch !r}.')
        deref(self._struct_cpp_obj).byteVal_ref().assign(deref((<_patch_types.BytePatch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_2(self, _fbthrift_value) except *:
        # for field i16Val
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 2)
            return
        if not isinstance(_fbthrift_value, _patch_types.I16Patch):
            raise TypeError(f'i16Val is not a { _patch_types.I16Patch !r}.')
        deref(self._struct_cpp_obj).i16Val_ref().assign(deref((<_patch_types.I16Patch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_3(self, _fbthrift_value) except *:
        # for field i32Val
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 3)
            return
        if not isinstance(_fbthrift_value, _patch_types.I32Patch):
            raise TypeError(f'i32Val is not a { _patch_types.I32Patch !r}.')
        deref(self._struct_cpp_obj).i32Val_ref().assign(deref((<_patch_types.I32Patch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_4(self, _fbthrift_value) except *:
        # for field i64Val
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 4)
            return
        if not isinstance(_fbthrift_value, _patch_types.I64Patch):
            raise TypeError(f'i64Val is not a { _patch_types.I64Patch !r}.')
        deref(self._struct_cpp_obj).i64Val_ref().assign(deref((<_patch_types.I64Patch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_5(self, _fbthrift_value) except *:
        # for field floatVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 5)
            return
        if not isinstance(_fbthrift_value, _patch_types.FloatPatch):
            raise TypeError(f'floatVal is not a { _patch_types.FloatPatch !r}.')
        deref(self._struct_cpp_obj).floatVal_ref().assign(deref((<_patch_types.FloatPatch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_6(self, _fbthrift_value) except *:
        # for field doubleVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 6)
            return
        if not isinstance(_fbthrift_value, _patch_types.DoublePatch):
            raise TypeError(f'doubleVal is not a { _patch_types.DoublePatch !r}.')
        deref(self._struct_cpp_obj).doubleVal_ref().assign(deref((<_patch_types.DoublePatch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_7(self, _fbthrift_value) except *:
        # for field stringVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 7)
            return
        if not isinstance(_fbthrift_value, _patch_types.StringPatch):
            raise TypeError(f'stringVal is not a { _patch_types.StringPatch !r}.')
        deref(self._struct_cpp_obj).stringVal_ref().assign(deref((<_patch_types.StringPatch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_8(self, _fbthrift_value) except *:
        # for field binaryVal
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructPatch](deref(self._struct_cpp_obj), 8)
            return
        if not isinstance(_fbthrift_value, _patch_types.BinaryPatch):
            raise TypeError(f'binaryVal is not a { _patch_types.BinaryPatch !r}.')
        deref(self._struct_cpp_obj).binaryVal_ref().assign(deref((<_patch_types.BinaryPatch?> _fbthrift_value)._cpp_obj))


@__cython.auto_pickle(False)
cdef class __MyStructValuePatch_FieldsSetter(__StructFieldsSetter):

    @staticmethod
    cdef __MyStructValuePatch_FieldsSetter _fbthrift_create(_module_types.cMyStructValuePatch* struct_cpp_obj):
        cdef __MyStructValuePatch_FieldsSetter __fbthrift_inst = __MyStructValuePatch_FieldsSetter.__new__(__MyStructValuePatch_FieldsSetter)
        __fbthrift_inst._struct_cpp_obj = struct_cpp_obj
        __fbthrift_inst._setters[__cstring_view(<const char*>"assign")] = __MyStructValuePatch_FieldsSetter._set_field_0
        __fbthrift_inst._setters[__cstring_view(<const char*>"clear")] = __MyStructValuePatch_FieldsSetter._set_field_1
        __fbthrift_inst._setters[__cstring_view(<const char*>"patch")] = __MyStructValuePatch_FieldsSetter._set_field_2
        return __fbthrift_inst

    cdef void set_field(__MyStructValuePatch_FieldsSetter self, const char* name, object value) except *:
        cdef __cstring_view cname = __cstring_view(name)
        cdef cumap[__cstring_view, __MyStructValuePatch_FieldsSetterFunc].iterator found = self._setters.find(cname)
        if found == self._setters.end():
            raise TypeError(f"invalid field name {name.decode('utf-8')}")
        deref(found).second(self, value)

    cdef void _set_field_0(self, _fbthrift_value) except *:
        # for field assign
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructValuePatch](deref(self._struct_cpp_obj), 0)
            return
        if not isinstance(_fbthrift_value, _module_types.MyStruct):
            raise TypeError(f'assign is not a { _module_types.MyStruct !r}.')
        deref(self._struct_cpp_obj).assign_ref().assign(deref((<_module_types.MyStruct?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_1(self, _fbthrift_value) except *:
        # for field clear
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructValuePatch](deref(self._struct_cpp_obj), 1)
            return
        if not isinstance(_fbthrift_value, bool):
            raise TypeError(f'clear is not a { bool !r}.')
        deref(self._struct_cpp_obj).clear_ref().assign(_fbthrift_value)

    cdef void _set_field_2(self, _fbthrift_value) except *:
        # for field patch
        if _fbthrift_value is None:
            __reset_field[_module_types.cMyStructValuePatch](deref(self._struct_cpp_obj), 2)
            return
        if not isinstance(_fbthrift_value, _module_types.MyStructPatch):
            raise TypeError(f'patch is not a { _module_types.MyStructPatch !r}.')
        deref(self._struct_cpp_obj).patch_ref().assign(deref((<_module_types.MyStructPatch?> _fbthrift_value)._cpp_obj))


@__cython.auto_pickle(False)
cdef class __OptionalMyStructValuePatch_FieldsSetter(__StructFieldsSetter):

    @staticmethod
    cdef __OptionalMyStructValuePatch_FieldsSetter _fbthrift_create(_module_types.cOptionalMyStructValuePatch* struct_cpp_obj):
        cdef __OptionalMyStructValuePatch_FieldsSetter __fbthrift_inst = __OptionalMyStructValuePatch_FieldsSetter.__new__(__OptionalMyStructValuePatch_FieldsSetter)
        __fbthrift_inst._struct_cpp_obj = struct_cpp_obj
        __fbthrift_inst._setters[__cstring_view(<const char*>"clear")] = __OptionalMyStructValuePatch_FieldsSetter._set_field_0
        __fbthrift_inst._setters[__cstring_view(<const char*>"patch")] = __OptionalMyStructValuePatch_FieldsSetter._set_field_1
        __fbthrift_inst._setters[__cstring_view(<const char*>"ensure")] = __OptionalMyStructValuePatch_FieldsSetter._set_field_2
        __fbthrift_inst._setters[__cstring_view(<const char*>"patchAfter")] = __OptionalMyStructValuePatch_FieldsSetter._set_field_3
        return __fbthrift_inst

    cdef void set_field(__OptionalMyStructValuePatch_FieldsSetter self, const char* name, object value) except *:
        cdef __cstring_view cname = __cstring_view(name)
        cdef cumap[__cstring_view, __OptionalMyStructValuePatch_FieldsSetterFunc].iterator found = self._setters.find(cname)
        if found == self._setters.end():
            raise TypeError(f"invalid field name {name.decode('utf-8')}")
        deref(found).second(self, value)

    cdef void _set_field_0(self, _fbthrift_value) except *:
        # for field clear
        if _fbthrift_value is None:
            __reset_field[_module_types.cOptionalMyStructValuePatch](deref(self._struct_cpp_obj), 0)
            return
        if not isinstance(_fbthrift_value, bool):
            raise TypeError(f'clear is not a { bool !r}.')
        deref(self._struct_cpp_obj).clear_ref().assign(_fbthrift_value)

    cdef void _set_field_1(self, _fbthrift_value) except *:
        # for field patch
        if _fbthrift_value is None:
            __reset_field[_module_types.cOptionalMyStructValuePatch](deref(self._struct_cpp_obj), 1)
            return
        if not isinstance(_fbthrift_value, _module_types.MyStructValuePatch):
            raise TypeError(f'patch is not a { _module_types.MyStructValuePatch !r}.')
        deref(self._struct_cpp_obj).patch_ref().assign(deref((<_module_types.MyStructValuePatch?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_2(self, _fbthrift_value) except *:
        # for field ensure
        if _fbthrift_value is None:
            __reset_field[_module_types.cOptionalMyStructValuePatch](deref(self._struct_cpp_obj), 2)
            return
        if not isinstance(_fbthrift_value, _module_types.MyStruct):
            raise TypeError(f'ensure is not a { _module_types.MyStruct !r}.')
        deref(self._struct_cpp_obj).ensure_ref().assign(deref((<_module_types.MyStruct?> _fbthrift_value)._cpp_obj))

    cdef void _set_field_3(self, _fbthrift_value) except *:
        # for field patchAfter
        if _fbthrift_value is None:
            __reset_field[_module_types.cOptionalMyStructValuePatch](deref(self._struct_cpp_obj), 3)
            return
        if not isinstance(_fbthrift_value, _module_types.MyStructValuePatch):
            raise TypeError(f'patchAfter is not a { _module_types.MyStructValuePatch !r}.')
        deref(self._struct_cpp_obj).patchAfter_ref().assign(deref((<_module_types.MyStructValuePatch?> _fbthrift_value)._cpp_obj))

