/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */

package test.fixtures.patch;

import com.facebook.swift.codec.*;
import com.facebook.swift.codec.ThriftField.Requiredness;
import com.facebook.swift.codec.ThriftField.Recursiveness;
import com.google.common.collect.*;
import java.util.*;
import javax.annotation.Nullable;
import org.apache.thrift.*;
import org.apache.thrift.transport.*;
import org.apache.thrift.protocol.*;
import static com.google.common.base.MoreObjects.toStringHelper;
import static com.google.common.base.MoreObjects.ToStringHelper;

@SwiftGenerated
@com.facebook.swift.codec.ThriftStruct(value="MyStructField23Patch", builder=MyStructField23Patch.Builder.class)
public final class MyStructField23Patch implements com.facebook.thrift.payload.ThriftSerializable {

    @ThriftConstructor
    public MyStructField23Patch(
        @com.facebook.swift.codec.ThriftField(value=1, name="assign", requiredness=Requiredness.OPTIONAL) final Map<String, String> assign
    ) {
        this.assign = assign;
    }
    
    @ThriftConstructor
    protected MyStructField23Patch() {
      this.assign = null;
    }
    
    public static class Builder {
    
        private Map<String, String> assign = null;
    
        @com.facebook.swift.codec.ThriftField(value=1, name="assign", requiredness=Requiredness.OPTIONAL)
        public Builder setAssign(Map<String, String> assign) {
            this.assign = assign;
            return this;
        }
    
        public Map<String, String> getAssign() { return assign; }
    
        public Builder() { }
        public Builder(MyStructField23Patch other) {
            this.assign = other.assign;
        }
    
        @ThriftConstructor
        public MyStructField23Patch build() {
            MyStructField23Patch result = new MyStructField23Patch (
                this.assign
            );
            return result;
        }
    }
    
    public static final Map<String, Integer> NAMES_TO_IDS = new HashMap();
    public static final Map<Integer, TField> FIELD_METADATA = new HashMap<>();
    private static final TStruct STRUCT_DESC = new TStruct("MyStructField23Patch");
    private final Map<String, String> assign;
    public static final int _ASSIGN = 1;
    private static final TField ASSIGN_FIELD_DESC = new TField("assign", TType.MAP, (short)1);
    static {
      NAMES_TO_IDS.put("assign", 1);
      FIELD_METADATA.put(1, ASSIGN_FIELD_DESC);
    }
    
    @Nullable
    @com.facebook.swift.codec.ThriftField(value=1, name="assign", requiredness=Requiredness.OPTIONAL)
    public Map<String, String> getAssign() { return assign; }
    
    @java.lang.Override
    public String toString() {
        ToStringHelper helper = toStringHelper(this);
        helper.add("assign", assign);
        return helper.toString();
    }
    
    @java.lang.Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }
    
        MyStructField23Patch other = (MyStructField23Patch)o;
    
        return
            Objects.equals(assign, other.assign) &&
            true;
    }
    
    @java.lang.Override
    public int hashCode() {
        return Arrays.deepHashCode(new Object[] {
            assign
        });
    }
    
    
    public static com.facebook.thrift.payload.Reader<MyStructField23Patch> asReader() {
      return MyStructField23Patch::read0;
    }
    
    public static MyStructField23Patch read0(TProtocol oprot) throws TException {
      TField __field;
      oprot.readStructBegin(MyStructField23Patch.NAMES_TO_IDS, MyStructField23Patch.FIELD_METADATA);
      MyStructField23Patch.Builder builder = new MyStructField23Patch.Builder();
      while (true) {
        __field = oprot.readFieldBegin();
        if (__field.type == TType.STOP) { break; }
        switch (__field.id) {
        case _ASSIGN:
          if (__field.type == TType.MAP) {
            Map<String, String> assign;
            {
            TMap _map = oprot.readMapBegin();
            assign = new HashMap<String, String>(Math.max(0, _map.size));
            for (int _i = 0; (_map.size < 0) ? oprot.peekMap() : (_i < _map.size); _i++) {
                
                String _key1 = oprot.readString();
                String _value1 = oprot.readString();
                assign.put(_key1, _value1);
            }
            }
            oprot.readMapEnd();
            builder.setAssign(assign);
          } else {
            TProtocolUtil.skip(oprot, __field.type);
          }
          break;
        default:
          TProtocolUtil.skip(oprot, __field.type);
          break;
        }
        oprot.readFieldEnd();
      }
      oprot.readStructEnd();
      return builder.build();
    }
    
    public void write0(TProtocol oprot) throws TException {
      oprot.writeStructBegin(STRUCT_DESC);
      if (this.assign != null) {
        oprot.writeFieldBegin(ASSIGN_FIELD_DESC);
        Map<String, String> _iter0 = this.assign;
        oprot.writeMapBegin(new TMap(TType.STRING, TType.STRING, _iter0.size()));
        for (Map.Entry<String, String> _iter1 : _iter0.entrySet()) {
          oprot.writeString(_iter1.getKey());
          oprot.writeString(_iter1.getValue());
        }
        oprot.writeMapEnd();
        oprot.writeFieldEnd();
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }
    
    private static class _MyStructField23PatchLazy {
        private static final MyStructField23Patch _DEFAULT = new MyStructField23Patch.Builder().build();
    }
    
    public static MyStructField23Patch defaultInstance() {
        return  _MyStructField23PatchLazy._DEFAULT;
    }
}
