#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#

from fbcode.thrift.py3lite.sync_client import SyncClient as _fbthrift_py3lite_SyncClient
from fbcode.thrift.py3lite.async_client import AsyncClient as _fbthrift_py3lite_AsyncClient
import fbcode.thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions
import module.lite_types


class SimpleService:
    class Sync(_fbthrift_py3lite_SyncClient):
        def __init__(self, channel):
            super().__init__(channel)

        def get_five(
            self
        ):
            resp = self._send_request(
                "SimpleService",
                "get_five",
                module.lite_types._fbthrift_SimpleService_get_five_args(),
                module.lite_types._fbthrift_SimpleService_get_five_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def add_five(
            self,
            num
        ):
            resp = self._send_request(
                "SimpleService",
                "add_five",
                module.lite_types._fbthrift_SimpleService_add_five_args(
                    num=num,),
                module.lite_types._fbthrift_SimpleService_add_five_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def do_nothing(
            self
        ):
            resp = self._send_request(
                "SimpleService",
                "do_nothing",
                module.lite_types._fbthrift_SimpleService_do_nothing_args(),
                module.lite_types._fbthrift_SimpleService_do_nothing_result,
            )

        def concat(
            self,
            first,
            second
        ):
            resp = self._send_request(
                "SimpleService",
                "concat",
                module.lite_types._fbthrift_SimpleService_concat_args(
                    first=first,
                    second=second,),
                module.lite_types._fbthrift_SimpleService_concat_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def get_value(
            self,
            simple_struct
        ):
            resp = self._send_request(
                "SimpleService",
                "get_value",
                module.lite_types._fbthrift_SimpleService_get_value_args(
                    simple_struct=simple_struct,),
                module.lite_types._fbthrift_SimpleService_get_value_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def negate(
            self,
            input
        ):
            resp = self._send_request(
                "SimpleService",
                "negate",
                module.lite_types._fbthrift_SimpleService_negate_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_negate_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def tiny(
            self,
            input
        ):
            resp = self._send_request(
                "SimpleService",
                "tiny",
                module.lite_types._fbthrift_SimpleService_tiny_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_tiny_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def small(
            self,
            input
        ):
            resp = self._send_request(
                "SimpleService",
                "small",
                module.lite_types._fbthrift_SimpleService_small_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_small_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def big(
            self,
            input
        ):
            resp = self._send_request(
                "SimpleService",
                "big",
                module.lite_types._fbthrift_SimpleService_big_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_big_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def two(
            self,
            input
        ):
            resp = self._send_request(
                "SimpleService",
                "two",
                module.lite_types._fbthrift_SimpleService_two_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_two_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def expected_exception(
            self
        ):
            resp = self._send_request(
                "SimpleService",
                "expected_exception",
                module.lite_types._fbthrift_SimpleService_expected_exception_args(),
                module.lite_types._fbthrift_SimpleService_expected_exception_result,
            )
            if resp.se is not None:
                raise resp.se

        def unexpected_exception(
            self
        ):
            resp = self._send_request(
                "SimpleService",
                "unexpected_exception",
                module.lite_types._fbthrift_SimpleService_unexpected_exception_args(),
                module.lite_types._fbthrift_SimpleService_unexpected_exception_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def sum_i16_list(
            self,
            numbers
        ):
            resp = self._send_request(
                "SimpleService",
                "sum_i16_list",
                module.lite_types._fbthrift_SimpleService_sum_i16_list_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_i16_list_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def sum_i32_list(
            self,
            numbers
        ):
            resp = self._send_request(
                "SimpleService",
                "sum_i32_list",
                module.lite_types._fbthrift_SimpleService_sum_i32_list_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_i32_list_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def sum_i64_list(
            self,
            numbers
        ):
            resp = self._send_request(
                "SimpleService",
                "sum_i64_list",
                module.lite_types._fbthrift_SimpleService_sum_i64_list_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_i64_list_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def concat_many(
            self,
            words
        ):
            resp = self._send_request(
                "SimpleService",
                "concat_many",
                module.lite_types._fbthrift_SimpleService_concat_many_args(
                    words=words,),
                module.lite_types._fbthrift_SimpleService_concat_many_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def count_structs(
            self,
            items
        ):
            resp = self._send_request(
                "SimpleService",
                "count_structs",
                module.lite_types._fbthrift_SimpleService_count_structs_args(
                    items=items,),
                module.lite_types._fbthrift_SimpleService_count_structs_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def sum_set(
            self,
            numbers
        ):
            resp = self._send_request(
                "SimpleService",
                "sum_set",
                module.lite_types._fbthrift_SimpleService_sum_set_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_set_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def contains_word(
            self,
            words,
            word
        ):
            resp = self._send_request(
                "SimpleService",
                "contains_word",
                module.lite_types._fbthrift_SimpleService_contains_word_args(
                    words=words,
                    word=word,),
                module.lite_types._fbthrift_SimpleService_contains_word_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def get_map_value(
            self,
            words,
            key
        ):
            resp = self._send_request(
                "SimpleService",
                "get_map_value",
                module.lite_types._fbthrift_SimpleService_get_map_value_args(
                    words=words,
                    key=key,),
                module.lite_types._fbthrift_SimpleService_get_map_value_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def map_length(
            self,
            items
        ):
            resp = self._send_request(
                "SimpleService",
                "map_length",
                module.lite_types._fbthrift_SimpleService_map_length_args(
                    items=items,),
                module.lite_types._fbthrift_SimpleService_map_length_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def sum_map_values(
            self,
            items
        ):
            resp = self._send_request(
                "SimpleService",
                "sum_map_values",
                module.lite_types._fbthrift_SimpleService_sum_map_values_args(
                    items=items,),
                module.lite_types._fbthrift_SimpleService_sum_map_values_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def complex_sum_i32(
            self,
            counter
        ):
            resp = self._send_request(
                "SimpleService",
                "complex_sum_i32",
                module.lite_types._fbthrift_SimpleService_complex_sum_i32_args(
                    counter=counter,),
                module.lite_types._fbthrift_SimpleService_complex_sum_i32_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def repeat_name(
            self,
            counter
        ):
            resp = self._send_request(
                "SimpleService",
                "repeat_name",
                module.lite_types._fbthrift_SimpleService_repeat_name_args(
                    counter=counter,),
                module.lite_types._fbthrift_SimpleService_repeat_name_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def get_struct(
            self
        ):
            resp = self._send_request(
                "SimpleService",
                "get_struct",
                module.lite_types._fbthrift_SimpleService_get_struct_args(),
                module.lite_types._fbthrift_SimpleService_get_struct_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def fib(
            self,
            n
        ):
            resp = self._send_request(
                "SimpleService",
                "fib",
                module.lite_types._fbthrift_SimpleService_fib_args(
                    n=n,),
                module.lite_types._fbthrift_SimpleService_fib_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def unique_words(
            self,
            words
        ):
            resp = self._send_request(
                "SimpleService",
                "unique_words",
                module.lite_types._fbthrift_SimpleService_unique_words_args(
                    words=words,),
                module.lite_types._fbthrift_SimpleService_unique_words_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def words_count(
            self,
            words
        ):
            resp = self._send_request(
                "SimpleService",
                "words_count",
                module.lite_types._fbthrift_SimpleService_words_count_args(
                    words=words,),
                module.lite_types._fbthrift_SimpleService_words_count_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def set_enum(
            self,
            in_enum
        ):
            resp = self._send_request(
                "SimpleService",
                "set_enum",
                module.lite_types._fbthrift_SimpleService_set_enum_args(
                    in_enum=in_enum,),
                module.lite_types._fbthrift_SimpleService_set_enum_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def list_of_lists(
            self,
            num_lists,
            num_items
        ):
            resp = self._send_request(
                "SimpleService",
                "list_of_lists",
                module.lite_types._fbthrift_SimpleService_list_of_lists_args(
                    num_lists=num_lists,
                    num_items=num_items,),
                module.lite_types._fbthrift_SimpleService_list_of_lists_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def word_character_frequency(
            self,
            sentence
        ):
            resp = self._send_request(
                "SimpleService",
                "word_character_frequency",
                module.lite_types._fbthrift_SimpleService_word_character_frequency_args(
                    sentence=sentence,),
                module.lite_types._fbthrift_SimpleService_word_character_frequency_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def list_of_sets(
            self,
            some_words
        ):
            resp = self._send_request(
                "SimpleService",
                "list_of_sets",
                module.lite_types._fbthrift_SimpleService_list_of_sets_args(
                    some_words=some_words,),
                module.lite_types._fbthrift_SimpleService_list_of_sets_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def nested_map_argument(
            self,
            struct_map
        ):
            resp = self._send_request(
                "SimpleService",
                "nested_map_argument",
                module.lite_types._fbthrift_SimpleService_nested_map_argument_args(
                    struct_map=struct_map,),
                module.lite_types._fbthrift_SimpleService_nested_map_argument_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def make_sentence(
            self,
            word_chars
        ):
            resp = self._send_request(
                "SimpleService",
                "make_sentence",
                module.lite_types._fbthrift_SimpleService_make_sentence_args(
                    word_chars=word_chars,),
                module.lite_types._fbthrift_SimpleService_make_sentence_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def get_union(
            self,
            sets
        ):
            resp = self._send_request(
                "SimpleService",
                "get_union",
                module.lite_types._fbthrift_SimpleService_get_union_args(
                    sets=sets,),
                module.lite_types._fbthrift_SimpleService_get_union_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def get_keys(
            self,
            string_map
        ):
            resp = self._send_request(
                "SimpleService",
                "get_keys",
                module.lite_types._fbthrift_SimpleService_get_keys_args(
                    string_map=string_map,),
                module.lite_types._fbthrift_SimpleService_get_keys_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def lookup_double(
            self,
            key
        ):
            resp = self._send_request(
                "SimpleService",
                "lookup_double",
                module.lite_types._fbthrift_SimpleService_lookup_double_args(
                    key=key,),
                module.lite_types._fbthrift_SimpleService_lookup_double_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def retrieve_binary(
            self,
            something
        ):
            resp = self._send_request(
                "SimpleService",
                "retrieve_binary",
                module.lite_types._fbthrift_SimpleService_retrieve_binary_args(
                    something=something,),
                module.lite_types._fbthrift_SimpleService_retrieve_binary_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def contain_binary(
            self,
            binaries
        ):
            resp = self._send_request(
                "SimpleService",
                "contain_binary",
                module.lite_types._fbthrift_SimpleService_contain_binary_args(
                    binaries=binaries,),
                module.lite_types._fbthrift_SimpleService_contain_binary_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def contain_enum(
            self,
            the_enum
        ):
            resp = self._send_request(
                "SimpleService",
                "contain_enum",
                module.lite_types._fbthrift_SimpleService_contain_enum_args(
                    the_enum=the_enum,),
                module.lite_types._fbthrift_SimpleService_contain_enum_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        def get_binary_union_struct(
            self,
            u
        ):
            resp = self._send_request(
                "SimpleService",
                "get_binary_union_struct",
                module.lite_types._fbthrift_SimpleService_get_binary_union_struct_args(
                    u=u,),
                module.lite_types._fbthrift_SimpleService_get_binary_union_struct_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

    class Async(_fbthrift_py3lite_AsyncClient):
        def __init__(self):
            super().__init__()

        async def get_five(
            self
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_five",
                module.lite_types._fbthrift_SimpleService_get_five_args(),
                module.lite_types._fbthrift_SimpleService_get_five_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def add_five(
            self,
            num
        ):
            resp = await self._send_request(
                "SimpleService",
                "add_five",
                module.lite_types._fbthrift_SimpleService_add_five_args(
                    num=num,),
                module.lite_types._fbthrift_SimpleService_add_five_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def do_nothing(
            self
        ):
            resp = await self._send_request(
                "SimpleService",
                "do_nothing",
                module.lite_types._fbthrift_SimpleService_do_nothing_args(),
                module.lite_types._fbthrift_SimpleService_do_nothing_result,
            )

        async def concat(
            self,
            first,
            second
        ):
            resp = await self._send_request(
                "SimpleService",
                "concat",
                module.lite_types._fbthrift_SimpleService_concat_args(
                    first=first,
                    second=second,),
                module.lite_types._fbthrift_SimpleService_concat_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def get_value(
            self,
            simple_struct
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_value",
                module.lite_types._fbthrift_SimpleService_get_value_args(
                    simple_struct=simple_struct,),
                module.lite_types._fbthrift_SimpleService_get_value_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def negate(
            self,
            input
        ):
            resp = await self._send_request(
                "SimpleService",
                "negate",
                module.lite_types._fbthrift_SimpleService_negate_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_negate_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def tiny(
            self,
            input
        ):
            resp = await self._send_request(
                "SimpleService",
                "tiny",
                module.lite_types._fbthrift_SimpleService_tiny_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_tiny_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def small(
            self,
            input
        ):
            resp = await self._send_request(
                "SimpleService",
                "small",
                module.lite_types._fbthrift_SimpleService_small_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_small_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def big(
            self,
            input
        ):
            resp = await self._send_request(
                "SimpleService",
                "big",
                module.lite_types._fbthrift_SimpleService_big_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_big_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def two(
            self,
            input
        ):
            resp = await self._send_request(
                "SimpleService",
                "two",
                module.lite_types._fbthrift_SimpleService_two_args(
                    input=input,),
                module.lite_types._fbthrift_SimpleService_two_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def expected_exception(
            self
        ):
            resp = await self._send_request(
                "SimpleService",
                "expected_exception",
                module.lite_types._fbthrift_SimpleService_expected_exception_args(),
                module.lite_types._fbthrift_SimpleService_expected_exception_result,
            )
            if resp.se is not None:
                raise resp.se

        async def unexpected_exception(
            self
        ):
            resp = await self._send_request(
                "SimpleService",
                "unexpected_exception",
                module.lite_types._fbthrift_SimpleService_unexpected_exception_args(),
                module.lite_types._fbthrift_SimpleService_unexpected_exception_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def sum_i16_list(
            self,
            numbers
        ):
            resp = await self._send_request(
                "SimpleService",
                "sum_i16_list",
                module.lite_types._fbthrift_SimpleService_sum_i16_list_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_i16_list_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def sum_i32_list(
            self,
            numbers
        ):
            resp = await self._send_request(
                "SimpleService",
                "sum_i32_list",
                module.lite_types._fbthrift_SimpleService_sum_i32_list_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_i32_list_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def sum_i64_list(
            self,
            numbers
        ):
            resp = await self._send_request(
                "SimpleService",
                "sum_i64_list",
                module.lite_types._fbthrift_SimpleService_sum_i64_list_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_i64_list_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def concat_many(
            self,
            words
        ):
            resp = await self._send_request(
                "SimpleService",
                "concat_many",
                module.lite_types._fbthrift_SimpleService_concat_many_args(
                    words=words,),
                module.lite_types._fbthrift_SimpleService_concat_many_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def count_structs(
            self,
            items
        ):
            resp = await self._send_request(
                "SimpleService",
                "count_structs",
                module.lite_types._fbthrift_SimpleService_count_structs_args(
                    items=items,),
                module.lite_types._fbthrift_SimpleService_count_structs_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def sum_set(
            self,
            numbers
        ):
            resp = await self._send_request(
                "SimpleService",
                "sum_set",
                module.lite_types._fbthrift_SimpleService_sum_set_args(
                    numbers=numbers,),
                module.lite_types._fbthrift_SimpleService_sum_set_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def contains_word(
            self,
            words,
            word
        ):
            resp = await self._send_request(
                "SimpleService",
                "contains_word",
                module.lite_types._fbthrift_SimpleService_contains_word_args(
                    words=words,
                    word=word,),
                module.lite_types._fbthrift_SimpleService_contains_word_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def get_map_value(
            self,
            words,
            key
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_map_value",
                module.lite_types._fbthrift_SimpleService_get_map_value_args(
                    words=words,
                    key=key,),
                module.lite_types._fbthrift_SimpleService_get_map_value_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def map_length(
            self,
            items
        ):
            resp = await self._send_request(
                "SimpleService",
                "map_length",
                module.lite_types._fbthrift_SimpleService_map_length_args(
                    items=items,),
                module.lite_types._fbthrift_SimpleService_map_length_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def sum_map_values(
            self,
            items
        ):
            resp = await self._send_request(
                "SimpleService",
                "sum_map_values",
                module.lite_types._fbthrift_SimpleService_sum_map_values_args(
                    items=items,),
                module.lite_types._fbthrift_SimpleService_sum_map_values_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def complex_sum_i32(
            self,
            counter
        ):
            resp = await self._send_request(
                "SimpleService",
                "complex_sum_i32",
                module.lite_types._fbthrift_SimpleService_complex_sum_i32_args(
                    counter=counter,),
                module.lite_types._fbthrift_SimpleService_complex_sum_i32_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def repeat_name(
            self,
            counter
        ):
            resp = await self._send_request(
                "SimpleService",
                "repeat_name",
                module.lite_types._fbthrift_SimpleService_repeat_name_args(
                    counter=counter,),
                module.lite_types._fbthrift_SimpleService_repeat_name_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def get_struct(
            self
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_struct",
                module.lite_types._fbthrift_SimpleService_get_struct_args(),
                module.lite_types._fbthrift_SimpleService_get_struct_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def fib(
            self,
            n
        ):
            resp = await self._send_request(
                "SimpleService",
                "fib",
                module.lite_types._fbthrift_SimpleService_fib_args(
                    n=n,),
                module.lite_types._fbthrift_SimpleService_fib_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def unique_words(
            self,
            words
        ):
            resp = await self._send_request(
                "SimpleService",
                "unique_words",
                module.lite_types._fbthrift_SimpleService_unique_words_args(
                    words=words,),
                module.lite_types._fbthrift_SimpleService_unique_words_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def words_count(
            self,
            words
        ):
            resp = await self._send_request(
                "SimpleService",
                "words_count",
                module.lite_types._fbthrift_SimpleService_words_count_args(
                    words=words,),
                module.lite_types._fbthrift_SimpleService_words_count_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def set_enum(
            self,
            in_enum
        ):
            resp = await self._send_request(
                "SimpleService",
                "set_enum",
                module.lite_types._fbthrift_SimpleService_set_enum_args(
                    in_enum=in_enum,),
                module.lite_types._fbthrift_SimpleService_set_enum_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def list_of_lists(
            self,
            num_lists,
            num_items
        ):
            resp = await self._send_request(
                "SimpleService",
                "list_of_lists",
                module.lite_types._fbthrift_SimpleService_list_of_lists_args(
                    num_lists=num_lists,
                    num_items=num_items,),
                module.lite_types._fbthrift_SimpleService_list_of_lists_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def word_character_frequency(
            self,
            sentence
        ):
            resp = await self._send_request(
                "SimpleService",
                "word_character_frequency",
                module.lite_types._fbthrift_SimpleService_word_character_frequency_args(
                    sentence=sentence,),
                module.lite_types._fbthrift_SimpleService_word_character_frequency_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def list_of_sets(
            self,
            some_words
        ):
            resp = await self._send_request(
                "SimpleService",
                "list_of_sets",
                module.lite_types._fbthrift_SimpleService_list_of_sets_args(
                    some_words=some_words,),
                module.lite_types._fbthrift_SimpleService_list_of_sets_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def nested_map_argument(
            self,
            struct_map
        ):
            resp = await self._send_request(
                "SimpleService",
                "nested_map_argument",
                module.lite_types._fbthrift_SimpleService_nested_map_argument_args(
                    struct_map=struct_map,),
                module.lite_types._fbthrift_SimpleService_nested_map_argument_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def make_sentence(
            self,
            word_chars
        ):
            resp = await self._send_request(
                "SimpleService",
                "make_sentence",
                module.lite_types._fbthrift_SimpleService_make_sentence_args(
                    word_chars=word_chars,),
                module.lite_types._fbthrift_SimpleService_make_sentence_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def get_union(
            self,
            sets
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_union",
                module.lite_types._fbthrift_SimpleService_get_union_args(
                    sets=sets,),
                module.lite_types._fbthrift_SimpleService_get_union_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def get_keys(
            self,
            string_map
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_keys",
                module.lite_types._fbthrift_SimpleService_get_keys_args(
                    string_map=string_map,),
                module.lite_types._fbthrift_SimpleService_get_keys_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def lookup_double(
            self,
            key
        ):
            resp = await self._send_request(
                "SimpleService",
                "lookup_double",
                module.lite_types._fbthrift_SimpleService_lookup_double_args(
                    key=key,),
                module.lite_types._fbthrift_SimpleService_lookup_double_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def retrieve_binary(
            self,
            something
        ):
            resp = await self._send_request(
                "SimpleService",
                "retrieve_binary",
                module.lite_types._fbthrift_SimpleService_retrieve_binary_args(
                    something=something,),
                module.lite_types._fbthrift_SimpleService_retrieve_binary_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def contain_binary(
            self,
            binaries
        ):
            resp = await self._send_request(
                "SimpleService",
                "contain_binary",
                module.lite_types._fbthrift_SimpleService_contain_binary_args(
                    binaries=binaries,),
                module.lite_types._fbthrift_SimpleService_contain_binary_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def contain_enum(
            self,
            the_enum
        ):
            resp = await self._send_request(
                "SimpleService",
                "contain_enum",
                module.lite_types._fbthrift_SimpleService_contain_enum_args(
                    the_enum=the_enum,),
                module.lite_types._fbthrift_SimpleService_contain_enum_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

        async def get_binary_union_struct(
            self,
            u
        ):
            resp = await self._send_request(
                "SimpleService",
                "get_binary_union_struct",
                module.lite_types._fbthrift_SimpleService_get_binary_union_struct_args(
                    u=u,),
                module.lite_types._fbthrift_SimpleService_get_binary_union_struct_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )


class DerivedService:
    class Sync(SimpleService.Sync):
        def __init__(self, channel):
            super().__init__(channel)

        def get_six(
            self
        ):
            resp = self._send_request(
                "DerivedService",
                "get_six",
                module.lite_types._fbthrift_DerivedService_get_six_args(),
                module.lite_types._fbthrift_DerivedService_get_six_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

    class Async(SimpleService.Async):
        def __init__(self):
            super().__init__()

        async def get_six(
            self
        ):
            resp = await self._send_request(
                "DerivedService",
                "get_six",
                module.lite_types._fbthrift_DerivedService_get_six_args(),
                module.lite_types._fbthrift_DerivedService_get_six_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )


class RederivedService:
    class Sync(DerivedService.Sync):
        def __init__(self, channel):
            super().__init__(channel)

        def get_seven(
            self
        ):
            resp = self._send_request(
                "RederivedService",
                "get_seven",
                module.lite_types._fbthrift_RederivedService_get_seven_args(),
                module.lite_types._fbthrift_RederivedService_get_seven_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )

    class Async(DerivedService.Async):
        def __init__(self):
            super().__init__()

        async def get_seven(
            self
        ):
            resp = await self._send_request(
                "RederivedService",
                "get_seven",
                module.lite_types._fbthrift_RederivedService_get_seven_args(),
                module.lite_types._fbthrift_RederivedService_get_seven_result,
            )
            # shortcut to success path for non-void returns
            if resp.success is not None:
                return resp.success
            raise _fbthrift_py3lite_exceptions.ApplicationError(
                _fbthrift_py3lite_exceptions.ApplicationErrorType.MISSING_RESULT,
                "Empty Response",
            )


