
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT
 *  @generated
 *
 */

#include <folly/python/import.h>
#include <thrift/lib/python/capi/iobuf.h>
#include <thrift/lib/python/types.h>

#include <thrift/compiler/test/fixtures/includes/src/gen-python-capi/transitive/thrift_types_api.h>
#include <thrift/compiler/test/fixtures/includes/src/gen-python-capi/transitive/thrift_types_capi.h>


namespace apache {
namespace thrift {
namespace python {
namespace capi {
namespace {
bool ensure_module_imported() {
  static ::folly::python::import_cache_nocapture import((
      ::import_transitive__thrift_types_capi));
  return import();
}
} // namespace

ExtractorResult<::cpp2::Foo>
Extractor<::cpp2::Foo>::operator()(PyObject* obj) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Foo>(
      "Module transitive import error");
  }
  std::unique_ptr<folly::IOBuf> val(
      extract__transitive__Foo(obj));
  if (!val) {
    CHECK(PyErr_Occurred());
    return extractorError<::cpp2::Foo>(
        "Thrift serialize error: Foo");
  }
  return detail::deserialize_iobuf<::cpp2::Foo>(std::move(val));
}


ExtractorResult<::cpp2::Foo>
Extractor<::apache::thrift::python::capi::ComposedStruct<
    ::cpp2::Foo>>::operator()(PyObject* fbthrift_data) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return extractorError<::cpp2::Foo>(
      "Module transitive import error");
  }
  auto obj = StrongRef(init__transitive__Foo(fbthrift_data));
  if (!obj) {
      return extractorError<::cpp2::Foo>(
          "Init from fbthrift error: Foo");
  }
  return Extractor<::cpp2::Foo>{}(*obj);
}

int Extractor<::cpp2::Foo>::typeCheck(PyObject* obj) {
  if (!ensure_module_imported()) {
    ::folly::python::handlePythonError(
      "Module transitive import error");
  }
  int result =
      can_extract__transitive__Foo(obj);
  if (result < 0) {
    ::folly::python::handlePythonError(
      "Unexpected type check error: Foo");
  }
  return result;
}


PyObject* Constructor<::cpp2::Foo>::operator()(
    const ::cpp2::Foo& val) {
  if (!ensure_module_imported()) {
    DCHECK(PyErr_Occurred() != nullptr);
    return nullptr;
  }
  auto ptr = construct__transitive__Foo(
      detail::serialize_to_iobuf(val));
  if (!ptr) {
    CHECK(PyErr_Occurred());
  }
  return ptr;
}


PyObject* Constructor<::apache::thrift::python::capi::ComposedStruct<
        ::cpp2::Foo>>::operator()(
    const ::cpp2::Foo& val) {
  auto obj = StrongRef(Constructor<::cpp2::Foo>{}(val));
  if (!obj) {
    return nullptr;
  }
  return getThriftData(*obj);
}

} // namespace capi
} // namespace python
} // namespace thrift
} // namespace apache
