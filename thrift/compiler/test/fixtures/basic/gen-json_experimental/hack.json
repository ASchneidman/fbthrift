{
  "__fbthrift": "@generated",
  "thrift_module" : "hack",
  "namespaces": {
    "go": "thrift.annotation.hack",
    "hs2": "facebook.thrift.annotation.hack",
    "java": "com.facebook.thrift.annotation.java_deprecated",
    "py": "thrift.annotation.hack",
    "py.asyncio": "facebook_thrift_asyncio.annotation.hack"
  },  "structs" :
  {
      "FieldWrapper" : {
        "name" : "FieldWrapper",
        "fields" : {
          "name" : {
            "name" : "name",
            "key" : 1,
            "lineno" : 38,
            "required" : "opt-in-req-out",
            "type" : "string"
          }
        },
        "is_exception" : false,
        "is_union" : false,
        "lineno" : 36
      },
      "Adapter" : {
        "name" : "Adapter",
        "fields" : {
          "name" : {
            "name" : "name",
            "key" : 1,
            "lineno" : 54,
            "required" : "opt-in-req-out",
            "type" : "string"
          }
        },
        "is_exception" : false,
        "is_union" : false,
        "lineno" : 52
      },
      "SkipCodegen" : {
        "name" : "SkipCodegen",
        "fields" : {
          "reason" : {
            "name" : "reason",
            "key" : 1,
            "lineno" : 60,
            "required" : "opt-in-req-out",
            "type" : "string"
          }
        },
        "is_exception" : false,
        "is_union" : false,
        "lineno" : 59
      },
      "Name" : {
        "name" : "Name",
        "fields" : {
          "name" : {
            "name" : "name",
            "key" : 1,
            "lineno" : 68,
            "required" : "opt-in-req-out",
            "type" : "string"
          },
          "reason" : {
            "name" : "reason",
            "key" : 2,
            "lineno" : 69,
            "required" : "opt-in-req-out",
            "type" : "string"
          }
        },
        "is_exception" : false,
        "is_union" : false,
        "lineno" : 67
      }
      },
  "source_path" : "thrift/annotation/hack",
  "py_namespace" : "thrift.annotation.hack"
}
