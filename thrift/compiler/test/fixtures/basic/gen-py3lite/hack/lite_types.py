#
# Autogenerated by Thrift
#
# DO NOT EDIT
#  @generated
#
import folly.iobuf as _fbthrift_iobuf
import thrift.py3lite.types as _fbthrift_py3lite_types
import thrift.py3lite.exceptions as _fbthrift_py3lite_exceptions


import facebook.thrift.annotation.scope.lite_types


class FieldWrapper(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "name",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "hack.FieldWrapper"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_FieldWrapper()



class SkipCodegen(metaclass=_fbthrift_py3lite_types.StructMeta):
    _fbthrift_SPEC = (
        (
            1,  # id
            True,  # isUnqualified
            "reason",  # name
            _fbthrift_py3lite_types.typeinfo_string,  # typeinfo
            None,  # default value
        ),
    )

    @staticmethod
    def __get_thrift_name__() -> str:
        return "hack.SkipCodegen"

    @staticmethod
    def __get_metadata__():
        return _fbthrift_metadata__struct_SkipCodegen()


# This unfortunately has to be down here to prevent circular imports
import hack.lite_metadata


def _fbthrift_metadata__struct_FieldWrapper():
    return hack.lite_metadata.gen_metadata_struct_FieldWrapper()
def _fbthrift_metadata__struct_SkipCodegen():
    return hack.lite_metadata.gen_metadata_struct_SkipCodegen()



_fbthrift_py3lite_types.fill_specs(
    FieldWrapper,
    SkipCodegen,
)
