#
# Autogenerated by Thrift
#
# DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
#  @generated
#

import typing as _typing

import folly.iobuf as _fbthrift_iobuf
import thrift.py3.builder

import facebook.thrift.annotation.cpp.types as _facebook_thrift_annotation_cpp_types
import facebook.thrift.annotation.cpp.builders as _facebook_thrift_annotation_cpp_builders
import facebook.thrift.annotation.hack.types as _facebook_thrift_annotation_hack_types
import facebook.thrift.annotation.hack.builders as _facebook_thrift_annotation_hack_builders
import facebook.thrift.annotation.python.types as _facebook_thrift_annotation_python_types
import facebook.thrift.annotation.python.builders as _facebook_thrift_annotation_python_builders
import facebook.thrift.annotation.thrift.types as _facebook_thrift_annotation_thrift_types
import facebook.thrift.annotation.thrift.builders as _facebook_thrift_annotation_thrift_builders

import module.types as _module_types


class Foo_Builder(thrift.py3.builder.StructBuilder):
    intField: _typing.Optional[int]
    optionalIntField: _typing.Optional[int]
    intFieldWithDefault: _typing.Optional[int]
    setField: _typing.Optional[set]
    optionalSetField: _typing.Optional[set]
    mapField: _typing.Optional[dict]
    optionalMapField: _typing.Optional[dict]
    binaryField: _typing.Optional[bytes]
    longField: _typing.Optional[int]
    adaptedLongField: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class Baz_Builder(thrift.py3.builder.StructBuilder):
    intField: _typing.Optional[int]
    setField: _typing.Optional[set]
    mapField: _typing.Optional[dict]
    binaryField: _typing.Optional[bytes]
    longField: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class Bar_Builder(thrift.py3.builder.StructBuilder):
    structField: _typing.Any
    optionalStructField: _typing.Any
    structListField: _typing.Optional[list]
    optionalStructListField: _typing.Optional[list]
    unionField: _typing.Any
    optionalUnionField: _typing.Any

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


class StructWithFieldAdapter_Builder(thrift.py3.builder.StructBuilder):
    field: _typing.Optional[int]
    shared_field: _typing.Optional[int]
    opt_shared_field: _typing.Optional[int]
    opt_boxed_field: _typing.Optional[int]

    def __iter__(self) -> _typing.Iterator[_typing.Tuple[str, _typing.Any]]: ...


