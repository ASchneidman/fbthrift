<?hh
/**
 * Autogenerated by Thrift
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
namespace thrift\test;

class module_CONSTANTS implements \IThriftConstants {
  /**
   * Original thrift constant:-
   * i32 var1
   */
  const int var1 = 10;

  /**
   * Original thrift constant:-
   * string var2
   */
  const string var2 = "20";

  /**
   * Original thrift constant:-
   * struct module.MyStruct var3
   */
  <<__Memoize>>
  public static function var3()[]: \thrift\test\MyStruct{
    return \thrift\test\MyStruct::fromShape(
      shape(
        "field" => 30,
      )
    );
  }


  public static function getAllStructuredAnnotations()[]: dict<string, dict<string, \IThriftStruct>> {
    return dict[
      'var1' => dict[
        '\thrift\annotation\cpp\Adapter' => \thrift\annotation\cpp\Adapter::fromShape(
          shape(
            "name" => "MyVarAdapter",
          )
        ),
      ],
      'var2' => dict[
        '\thrift\annotation\cpp\Adapter' => \thrift\annotation\cpp\Adapter::fromShape(
          shape(
            "name" => "MyVarAdapter",
          )
        ),
      ],
      'var3' => dict[
        '\thrift\annotation\cpp\Adapter' => \thrift\annotation\cpp\Adapter::fromShape(
          shape(
            "name" => "MyVarAdapter",
          )
        ),
      ],
    ];
  }
}

